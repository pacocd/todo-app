// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when TodoInput is fully rendered using Numeric mode renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoInput
    fieldName="user_id"
    setEditingFieldsData={
      [MockFunction] {
        "calls": Array [
          Array [
            "user_id",
            1,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    title="User"
    type="numeric"
    value={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "marginBottom": 10,
            }
          }
        >
          User
        </Text>
        <TextInput
          allowFontScaling={true}
          keyboardType="numeric"
          multiline={true}
          onChangeText={[Function]}
          placeholder="Write here"
          underlineColorAndroid="white"
          value="1"
        />
      </Component>,
      "style": Object {
        "margin": 16,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            User
          </Text>,
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            multiline={true}
            onChangeText={[Function]}
            placeholder="Write here"
            underlineColorAndroid="white"
            value="1"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "User",
            "ellipsizeMode": "tail",
            "style": Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "marginBottom": 10,
            },
          },
          "ref": null,
          "rendered": "User",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": true,
            "keyboardType": "numeric",
            "multiline": true,
            "onChangeText": [Function],
            "placeholder": "Write here",
            "underlineColorAndroid": "white",
            "value": "1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            User
          </Text>
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            multiline={true}
            onChangeText={[Function]}
            placeholder="Write here"
            underlineColorAndroid="white"
            value="1"
          />
        </Component>,
        "style": Object {
          "margin": 16,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 12,
                  "fontWeight": "bold",
                  "marginBottom": 10,
                }
              }
            >
              User
            </Text>,
            <TextInput
              allowFontScaling={true}
              keyboardType="numeric"
              multiline={true}
              onChangeText={[Function]}
              placeholder="Write here"
              underlineColorAndroid="white"
              value="1"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "User",
              "ellipsizeMode": "tail",
              "style": Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              },
            },
            "ref": null,
            "rendered": "User",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": true,
              "keyboardType": "numeric",
              "multiline": true,
              "onChangeText": [Function],
              "placeholder": "Write here",
              "underlineColorAndroid": "white",
              "value": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`when TodoInput is fully rendered using Switch mode renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoInput
    fieldName="completed"
    setEditingFieldsData={
      [MockFunction] {
        "calls": Array [
          Array [
            "completed",
            false,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    title="Completed"
    type="switch"
    value={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "marginBottom": 10,
            }
          }
        >
          Completed
        </Text>
        <Switch
          disabled={false}
          onValueChange={[Function]}
          value={false}
        />
      </Component>,
      "style": Object {
        "margin": 16,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Completed
          </Text>,
          <Switch
            disabled={false}
            onValueChange={[Function]}
            value={false}
          />,
        ],
        "style": Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Completed",
            "ellipsizeMode": "tail",
            "style": Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "marginBottom": 10,
            },
          },
          "ref": null,
          "rendered": "Completed",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "onValueChange": [Function],
            "value": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Completed
          </Text>
          <Switch
            disabled={false}
            onValueChange={[Function]}
            value={false}
          />
        </Component>,
        "style": Object {
          "margin": 16,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 12,
                  "fontWeight": "bold",
                  "marginBottom": 10,
                }
              }
            >
              Completed
            </Text>,
            <Switch
              disabled={false}
              onValueChange={[Function]}
              value={false}
            />,
          ],
          "style": Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Completed",
              "ellipsizeMode": "tail",
              "style": Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              },
            },
            "ref": null,
            "rendered": "Completed",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "onValueChange": [Function],
              "value": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`when TodoInput is fully rendered using default mode renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoInput
    fieldName="title"
    setEditingFieldsData={
      [MockFunction] {
        "calls": Array [
          Array [
            "title",
            "test",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    title="Title"
    type="default"
    value="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "marginBottom": 10,
            }
          }
        >
          Title
        </Text>
        <TextInput
          allowFontScaling={true}
          keyboardType="default"
          multiline={true}
          onChangeText={[Function]}
          placeholder="Write here"
          underlineColorAndroid="white"
          value="test"
        />
      </Component>,
      "style": Object {
        "margin": 16,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Title
          </Text>,
          <TextInput
            allowFontScaling={true}
            keyboardType="default"
            multiline={true}
            onChangeText={[Function]}
            placeholder="Write here"
            underlineColorAndroid="white"
            value="test"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Title",
            "ellipsizeMode": "tail",
            "style": Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "marginBottom": 10,
            },
          },
          "ref": null,
          "rendered": "Title",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": true,
            "keyboardType": "default",
            "multiline": true,
            "onChangeText": [Function],
            "placeholder": "Write here",
            "underlineColorAndroid": "white",
            "value": "test",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Title
          </Text>
          <TextInput
            allowFontScaling={true}
            keyboardType="default"
            multiline={true}
            onChangeText={[Function]}
            placeholder="Write here"
            underlineColorAndroid="white"
            value="test"
          />
        </Component>,
        "style": Object {
          "margin": 16,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 12,
                  "fontWeight": "bold",
                  "marginBottom": 10,
                }
              }
            >
              Title
            </Text>,
            <TextInput
              allowFontScaling={true}
              keyboardType="default"
              multiline={true}
              onChangeText={[Function]}
              placeholder="Write here"
              underlineColorAndroid="white"
              value="test"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Title",
              "ellipsizeMode": "tail",
              "style": Object {
                "fontSize": 12,
                "fontWeight": "bold",
                "marginBottom": 10,
              },
            },
            "ref": null,
            "rendered": "Title",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": true,
              "keyboardType": "default",
              "multiline": true,
              "onChangeText": [Function],
              "placeholder": "Write here",
              "underlineColorAndroid": "white",
              "value": "test",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
