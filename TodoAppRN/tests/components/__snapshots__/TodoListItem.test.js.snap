// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when TodoListItem is fully renderd renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoListItem
    onPress={[MockFunction]}
    todo={
      Object {
        "completed": false,
        "id": 1,
        "title": "test",
        "user_id": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        className="todoContainerView"
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "flex": 1,
            "flexDirection": "row",
            "paddingVertical": 14,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          className="todoTitleText"
          ellipsizeMode="tail"
          style={
            Object {
              "flex": 1,
              "marginHorizontal": 16,
            }
          }
        >
          test
        </Text>
        <Switch
          className="todoCompletedSwitch"
          disabled={false}
          onTintColor="#4688f1"
          onValueChange={[Function]}
          style={
            Object {
              "marginRight": 16,
            }
          }
          value={false}
        />
      </Component>,
      "onPress": [MockFunction],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            className="todoTitleText"
            ellipsizeMode="tail"
            style={
              Object {
                "flex": 1,
                "marginHorizontal": 16,
              }
            }
          >
            test
          </Text>,
          <Switch
            className="todoCompletedSwitch"
            disabled={false}
            onTintColor="#4688f1"
            onValueChange={[Function]}
            style={
              Object {
                "marginRight": 16,
              }
            }
            value={false}
          />,
        ],
        "className": "todoContainerView",
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "flex": 1,
          "flexDirection": "row",
          "paddingVertical": 14,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "test",
            "className": "todoTitleText",
            "ellipsizeMode": "tail",
            "style": Object {
              "flex": 1,
              "marginHorizontal": 16,
            },
          },
          "ref": null,
          "rendered": "test",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "todoCompletedSwitch",
            "disabled": false,
            "onTintColor": "#4688f1",
            "onValueChange": [Function],
            "style": Object {
              "marginRight": 16,
            },
            "thumbTintColor": undefined,
            "value": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          className="todoContainerView"
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "white",
              "flex": 1,
              "flexDirection": "row",
              "paddingVertical": 14,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            className="todoTitleText"
            ellipsizeMode="tail"
            style={
              Object {
                "flex": 1,
                "marginHorizontal": 16,
              }
            }
          >
            test
          </Text>
          <Switch
            className="todoCompletedSwitch"
            disabled={false}
            onTintColor="#4688f1"
            onValueChange={[Function]}
            style={
              Object {
                "marginRight": 16,
              }
            }
            value={false}
          />
        </Component>,
        "onPress": [MockFunction],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              className="todoTitleText"
              ellipsizeMode="tail"
              style={
                Object {
                  "flex": 1,
                  "marginHorizontal": 16,
                }
              }
            >
              test
            </Text>,
            <Switch
              className="todoCompletedSwitch"
              disabled={false}
              onTintColor="#4688f1"
              onValueChange={[Function]}
              style={
                Object {
                  "marginRight": 16,
                }
              }
              value={false}
            />,
          ],
          "className": "todoContainerView",
          "style": Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "flex": 1,
            "flexDirection": "row",
            "paddingVertical": 14,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "test",
              "className": "todoTitleText",
              "ellipsizeMode": "tail",
              "style": Object {
                "flex": 1,
                "marginHorizontal": 16,
              },
            },
            "ref": null,
            "rendered": "test",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "todoCompletedSwitch",
              "disabled": false,
              "onTintColor": "#4688f1",
              "onValueChange": [Function],
              "style": Object {
                "marginRight": 16,
              },
              "thumbTintColor": undefined,
              "value": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
