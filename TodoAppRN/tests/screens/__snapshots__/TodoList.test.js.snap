// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when TodoList is fully rendered renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoList
    deleteTodo={[MockFunction]}
    getTodoList={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Promise {
              "_40": 0,
              "_55": Object {
                "data": Array [
                  Object {
                    "completed": false,
                    "id": 1,
                    "title": "test",
                    "user_id": 1,
                  },
                ],
                "status": 200,
              },
              "_65": 1,
              "_72": null,
            },
          },
          Object {
            "isThrow": false,
            "value": Promise {
              "_40": 0,
              "_55": Object {
                "data": Array [
                  Object {
                    "completed": false,
                    "id": 1,
                    "title": "test",
                    "user_id": 1,
                  },
                ],
                "status": 200,
              },
              "_65": 1,
              "_72": null,
            },
          },
        ],
      }
    }
    hasError={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "data": Array [
                Object {
                  "completed": false,
                  "id": 1,
                  "title": "test",
                  "user_id": 1,
                },
              ],
              "status": 200,
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": false,
          },
        ],
      }
    }
    navigation={
      Object {
        "navigate": [MockFunction],
      }
    }
    setTodoListData={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "completed": false,
                "id": 1,
                "title": "test",
                "user_id": 1,
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    todoListData={
      Array [
        Object {
          "completed": false,
          "id": 1,
          "title": "test",
          "user_id": 1,
        },
      ]
    }
    updateTodo={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <SwipeListView
        className="todoFlatList"
        closeOnRowBeginSwipe={false}
        closeOnRowPress={true}
        closeOnScroll={true}
        data={
          Array [
            Object {
              "completed": false,
              "id": 1,
              "title": "test",
              "user_id": 1,
            },
          ]
        }
        directionalDistanceChangeThreshold={2}
        disableLeftSwipe={false}
        disableRightSwipe={true}
        keyExtractor={[Function]}
        leftOpenValue={0}
        previewFirstRow={false}
        recalculateHiddenLayout={false}
        renderHiddenItem={[Function]}
        renderItem={[Function]}
        rightOpenValue={-75}
        swipeToClosePercent={50}
        swipeToOpenPercent={50}
        swipeToOpenVelocityContribution={0}
        useFlatList={true}
      />,
      "className": "todoListView",
      "style": Object {
        "backgroundColor": "white",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "className": "todoFlatList",
        "closeOnRowBeginSwipe": false,
        "closeOnRowPress": true,
        "closeOnScroll": true,
        "data": Array [
          Object {
            "completed": false,
            "id": 1,
            "title": "test",
            "user_id": 1,
          },
        ],
        "directionalDistanceChangeThreshold": 2,
        "disableLeftSwipe": false,
        "disableRightSwipe": true,
        "keyExtractor": [Function],
        "leftOpenValue": 0,
        "previewFirstRow": false,
        "recalculateHiddenLayout": false,
        "renderHiddenItem": [Function],
        "renderItem": [Function],
        "rightOpenValue": -75,
        "swipeToClosePercent": 50,
        "swipeToOpenPercent": 50,
        "swipeToOpenVelocityContribution": 0,
        "useFlatList": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <SwipeListView
          className="todoFlatList"
          closeOnRowBeginSwipe={false}
          closeOnRowPress={true}
          closeOnScroll={true}
          data={
            Array [
              Object {
                "completed": false,
                "id": 1,
                "title": "test",
                "user_id": 1,
              },
            ]
          }
          directionalDistanceChangeThreshold={2}
          disableLeftSwipe={false}
          disableRightSwipe={true}
          keyExtractor={[Function]}
          leftOpenValue={0}
          previewFirstRow={false}
          recalculateHiddenLayout={false}
          renderHiddenItem={[Function]}
          renderItem={[Function]}
          rightOpenValue={-75}
          swipeToClosePercent={50}
          swipeToOpenPercent={50}
          swipeToOpenVelocityContribution={0}
          useFlatList={true}
        />,
        "className": "todoListView",
        "style": Object {
          "backgroundColor": "white",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "todoFlatList",
          "closeOnRowBeginSwipe": false,
          "closeOnRowPress": true,
          "closeOnScroll": true,
          "data": Array [
            Object {
              "completed": false,
              "id": 1,
              "title": "test",
              "user_id": 1,
            },
          ],
          "directionalDistanceChangeThreshold": 2,
          "disableLeftSwipe": false,
          "disableRightSwipe": true,
          "keyExtractor": [Function],
          "leftOpenValue": 0,
          "previewFirstRow": false,
          "recalculateHiddenLayout": false,
          "renderHiddenItem": [Function],
          "renderItem": [Function],
          "rightOpenValue": -75,
          "swipeToClosePercent": 50,
          "swipeToOpenPercent": 50,
          "swipeToOpenVelocityContribution": 0,
          "useFlatList": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`when TodoList is loading renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoList
    deleteTodo={[Function]}
    getTodoList={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    hasError={
      [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": true,
          },
        ],
      }
    }
    navigation={Object {}}
    setTodoListData={[MockFunction]}
    updateTodo={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="large"
      />,
      "className": "activityIndicatorView",
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animating": true,
        "color": "#999999",
        "hidesWhenStopped": true,
        "size": "large",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="large"
        />,
        "className": "activityIndicatorView",
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animating": true,
          "color": "#999999",
          "hidesWhenStopped": true,
          "size": "large",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
